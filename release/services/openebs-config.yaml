# ------------------------------------------------------
# Purspose of this configuration spec file :
# ==========================================
# OpenEBS maya is expected to identify and create the storage tiers in a given
# node or cluster. Though Maya can act on the available local storage and 
# remote storage automatically, the storage admin (human) may want to manage 
# resources manually. This config file is expected to provide such options
# 
# What should this spec cover ?
# =============================
# Include the details on how storage will be allocated for the replicas
# The options can include:
# - Manual or automatic
# - host-directory-path 
# - lvm using local or remote disks (connected via iscsi/fc/nbd)
# Will also contain details on how to use:
# - cache from nvme disks
# - backup storage from S3
# The above configuration can be specified at a cluster level or
# per node (minion) 
#
# The storage-manager(s) or maya-agents will look for updates on this spec 
# and take the appropriate actions. 
# 
# This file will also specify the different storage tiers
# that will be used to associate with storage-classes
# For example:
# - A node can have an lvm out of SSD disks or with a remote
#   disk. The local ssd disks will be used for high-performance
#   persistentvolumeclaims, where as remote disks can be used 
#   for backup-jobs persistentvolumeclaims. 
#
# Notes on Implementation
# =============================
# The configuration is specified as Custom Resources called 
# - StoragePoolClaims and StoragePools
# - StorageBackendClaims and StorageBackends
#
# StoragePoolClaim (SPC) : Provide information about how to 
#  create a storage pool by consuming local or remote disks. 
#  SPC will contain details like, the block devices or host 
#  directory to use for creating a StoragePool. An SPC can 
#  result on one or more StoragePools to be created on the 
#  same node or across nodes. 
#
# StoragePool : Is an instance of storage pool - like 
#  - a directory on host-os, 
#  - a directory on mounted-disk, 
#
# Define a storage pool for launching the replicas using
#  local directory or mounted directory on kubernetes nodes
#  
# The following is an example of how a storagepool can be 
# confgured with any other directory to be used for persisting 
# the storage. 
#
# Note: OpenEBS uses /var/openebs as default directory, even if 
# the following default storagepool is not added to the k8s cluster.
#
apiVersion: openebs.io/v1alpha1
kind: StoragePool
metadata:
  name: default
  type: hostdir
spec:
  path: "/var/openebs" 
  nodes: [ "all" ]
  #maxVolSize: 10G #Max Volume Size
  #maxAllocatedSize: 100G #Max Total Space allocated from this directory/mount
---
#TODO - Yet to review the below lines and convert them into valid CRs
# StorageBackendClaim : Provides information about types of storage
#  pools that can be created using the storage pool and provided as 
#  persistent storage backends to openebs volumes. The storage pool types
#  can be as simple as a directory, whole-disk, partition, etc., 
#
# StorageBackend : Is an instance of SBC or it is the volume mount 
# provided to the openebs volume containers. A backend can be 
#  - sub/full directory created from StoragePool(directory), 
#  - partition/full disk from a StoragePool(disk) 
#
# Custom Resource Definitions
# Note: The following CRDs will move into openebs-operator.yaml
# =============================================================
#apiVersion: apiextensions.k8s.io/v1beta1
#kind: CustomResourceDefinition
#metadata:
#  # name must match the spec fields below, and be in the form: <plural>.<group>
#  name: storagebackendclaims.openebs.io
#spec:
#  # group name to use for REST API: /apis/<group>/<version>
#  group: openebs.io
#  # version name to use for REST API: /apis/<group>/<version>
#  version: v1alpha1
#  # either Namespaced or Cluster
#  scope: Cluster
#  names:
#    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
#    plural: storagebackendclaims
#    # singular name to be used as an alias on the CLI and for display
#    singular: storagebackendclaim
#    # kind is normally the CamelCased singular type. Your resource manifests use this.
#    kind: StorageBackendClaim
#    # shortNames allow shorter string to match your resource on the CLI
#    shortNames:
#    - sbc
#apiVersion: apiextensions.k8s.io/v1beta1
#kind: CustomResourceDefinition
#metadata:
#  # name must match the spec fields below, and be in the form: <plural>.<group>
#  name: storagebackends.openebs.io
#spec:
#  # group name to use for REST API: /apis/<group>/<version>
#  group: openebs.io
#  # version name to use for REST API: /apis/<group>/<version>
#  version: v1alpha1
#  # either Namespaced or Cluster
#  scope: Cluster
#  names:
#    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
#    plural: storagebackends
#    # singular name to be used as an alias on the CLI and for display
#    singular: storagebackend
#    # kind is normally the CamelCased singular type. Your resource manifests use this.
#    kind: StorageBackend
#    # shortNames allow shorter string to match your resource on the CLI
#    shortNames:
#    - sb
#---  
#apiVersion: openebs.io/v1alpha1
#kind: Pool
#metadata:
#  name: iscsi-vol1
#  type: iscsi
#spec:
#  portal: "192.168.1.1:3260" 
#  iqn: "iqn.2012-09.account-name:vol1" 
#  lun: 1
#  mountpath: "/mnt/openebs-vol1"
#  maxSize: 10G #Max Volume Size
#  maxAllocatedSize: 10G #Max Total Space allocated from this directory/mount
#  nodes: [ "all" ]
#---  
#apiVersion: openebs.io/v1alpha1
#kind: Pool
#metadata:
#  name: lvm-vol1
#  type: lvm
#spec:
#  devices: [ "/dev/sdc", "/dev/sdd" ]
#  mountpath: "/mnt/lvm-vol1"
#  maxSize: 10G #Max Volume Size
#  maxAllocatedSize: 10G #Max Total Space allocated from this directory/mount
#  nodes: [ "all" ]
